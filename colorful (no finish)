
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class RingStack:
    def __init__(self):
        self.top = None
        self.rings_taken = set()
    def is_empty(self):
        return self.top is None
    def push(self, data):
        new_node = Node(data)
        new_node.next = self.top
        self.top = new_node
    def pop(self):
        if self.is_empty():
            print("stack is empty")
            return None
        popped_data = self.top.data
        self.top = self.top.next
        return popped_data
def printRed():
    print("\033[1;31;40m (|||||||||||||)")
def printYellow():
    print("\033[1;33;40m  (|||||||||||)")
def printGreen():
    print("\033[1;32;40m   (|||||||||)")
def printBlue():
    print("\033[1;34;40m    (|||||||)")
def printPurple():
    print("\033[1;35;40m     (|||||)")
def printBase():
    print("       |=|")
    pass

def main():
    x = 0
    z = 6
    y = 0
    while (y == 0):
        while (x != z):
            printBase()
            x = x + 1
        print("What color would you like to add? (red, yellow, green, blue, pruple)")
        colors = ["red", "yellow", "green", "blue", "purple"]
        list = [printRed, printYellow, printGreen, printBlue, printPurple]
        playPick = str(input())
        player = int(colors.index(playPick))
        list[player]()
        x = 0
        z = z - 1
main()
